<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan
		base-package="cn.seiei.controller" />

	<!-- <mvc:annotation-driven>会自动注册RequestMappingHandlerMapping与RequestMappingHandlerAdapter两个Bean, 
		这是Spring MVC为@Controller分发请求所必需的，
		并且提供了数据绑定支持， @NumberFormatannotation支持， 
		@DateTimeFormat支持， @Valid支持读写XML的支持（JAXB）和读写JSON的支持（默认Jackson）等功能。
		 要使用spring mvc中的@Controller注解，就必须要配置<mvc:annotation-driven />，
		 否则org.springframework.web.servlet.DispatcherServlet无法找到控制器并把请求分发到控制器。
	 -->
	<mvc:annotation-driven />

	<!-- 以下两个 Bean 用于收，发 json 数据，支持 @RequestBody 注释将json对象转换为 java 对象 -->
	<bean id="jsonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonHttpMessageConverter" />
			</list>
		</property>
	</bean>

	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<!-- 这里的路径根目录是 webapp -->
		<property name="prefix" value="/" />
		<property name="suffix" value=".html" />
	</bean>
</beans>           